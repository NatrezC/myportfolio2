[{"/home/trez/Desktop/SEIFX818/myportfolio2/src/index.js":"1","/home/trez/Desktop/SEIFX818/myportfolio2/src/App.js":"2","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/Navbar.js":"3","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/Button.js":"4","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/pages/Home.js":"5","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/HeroSection.js":"6","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/Cards.js":"7","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/CardItem.js":"8"},{"size":163,"mtime":1608775572571,"results":"9","hashOfConfig":"10"},{"size":419,"mtime":1608860093997,"results":"11","hashOfConfig":"10"},{"size":3146,"mtime":1608866195026,"results":"12","hashOfConfig":"10"},{"size":731,"mtime":1608782353767,"results":"13","hashOfConfig":"10"},{"size":266,"mtime":1608911853887,"results":"14","hashOfConfig":"10"},{"size":930,"mtime":1608866285308,"results":"15","hashOfConfig":"10"},{"size":2068,"mtime":1608913653214,"results":"16","hashOfConfig":"10"},{"size":746,"mtime":1608912793057,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14fewtl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/trez/Desktop/SEIFX818/myportfolio2/src/index.js",[],["37","38"],"/home/trez/Desktop/SEIFX818/myportfolio2/src/App.js",[],"/home/trez/Desktop/SEIFX818/myportfolio2/src/components/Navbar.js",["39","40"],"import React, { useState, useEffect } from 'react';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const showButton = () => {\n        if (window.innerWidth <= 960) {\n            setButton(false);\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton);\n\n    return (\n        <>\n            <nav className='navbar'>\n                <div className='navbar-container'>\n                    <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n                        Portfolio\n            <i class='fab fa-typo3' />\n                    </Link>\n                    <div className='menu-icon' onClick={handleClick}>\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n                    </div>\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                                Home\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link\n                                to='/About'\n                                className='nav-links'\n                                onClick={closeMobileMenu}\n                            >\n                                About\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link\n                                to='/Projects'\n                                className='nav-links'\n                                onClick={closeMobileMenu}\n                            >\n                                Projects\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link\n                                to='/Contact'\n                                className='nav-links'\n                                onClick={closeMobileMenu}\n                            >\n                                Contact\n                            </Link>\n                        </li>\n\n                        {/* <li>\n                            <Link\n                                to='/sign-up'\n                                className='nav-links-mobile'\n                                onClick={closeMobileMenu}\n                            >\n                                Sign up\n                            </Link>\n                        </li> */}\n                    </ul>\n                    {/* {button && <Button buttonStyle='btn--outline'>SIGN UP</Button>} */}\n                </div>\n            </nav>\n        </>\n    );\n}\n\nexport default Navbar;\n","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/Button.js",[],"/home/trez/Desktop/SEIFX818/myportfolio2/src/components/pages/Home.js",[],"/home/trez/Desktop/SEIFX818/myportfolio2/src/components/HeroSection.js",["41","42"],"import React from 'react'\nimport '../App.css'\nimport { Button } from './Button'\nimport './HeroSection.css'\n\nfunction HeroSection() {\n    return (\n        <div className=\"hero-container\">\n            <video src=\"/videos/binaryCode.mov\" autoPlay loop muted />\n            <img src=\"/pictures/Me.JPG\" style={{height: '20em', width: '20em', marginBottom: '100px', borderRadius: \"150px\"}} />\n            <h1>Natrez's Portfolio</h1>\n            <p>Let's Get Coding!!!</p>\n            {/* <div className=\"hero-btns\">\n                <Button className='btns' buttonStyle=\"btn--outline\" buttonSize=\"btn--large\">\n                    GET STARTED\n                </Button>\n                <Button className='btns' buttonStyle=\"btn--primary\" buttonSize=\"btn--large\">\n                    Prolly DONT NEED <i className = \"far fa-play-circle\" />\n                </Button>\n            </div> */}\n        </div>\n    )\n}\n\nexport default HeroSection\n","/home/trez/Desktop/SEIFX818/myportfolio2/src/components/Cards.js",[],"/home/trez/Desktop/SEIFX818/myportfolio2/src/components/CardItem.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":8,"column":12,"nodeType":"50","messageId":"51","endLine":8,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":10,"column":13,"nodeType":"55","endLine":10,"endColumn":129},{"ruleId":"56","severity":1,"message":"57","line":10,"column":25,"nodeType":"55","endLine":10,"endColumn":97},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'button' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]